# Zone 1: Development & Artifacts
# Complete stack for code hosting and container registry
# Can be deployed standalone or as part of megamonolith

version: '3.8'

services:
  # OneDev - Self-hosted Git server (like GitLab/GitHub)
  onedev:
    image: 1dev/server:latest
    container_name: onedev
    restart: unless-stopped
    ports:
      - "${ONEDEV_HTTP_PORT:-6610}:6610"
      - "${ONEDEV_SSH_PORT:-6611}:6611"
    volumes:
      - onedev_data:/opt/onedev
    environment:
      hibernate_dialect: io.onedev.server.persistence.PostgreSQLDialect
      hibernate_connection_driver_class: org.postgresql.Driver
      hibernate_connection_url: jdbc:postgresql://onedev-db:5432/onedev
      hibernate_connection_username: onedev
      hibernate_connection_password: ${ONEDEV_DB_PASSWORD}
      initial_user: ${ONEDEV_ADMIN_USER:-admin}
      initial_password: ${ONEDEV_ADMIN_PASSWORD}
      initial_email: ${ONEDEV_ADMIN_EMAIL}
      initial_server_url: ${ONEDEV_URL:-http://localhost:6610}
    depends_on:
      onedev-db:
        condition: service_healthy
    networks:
      - zone1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6610"]
      interval: 30s
      timeout: 10s
      retries: 3

  onedev-db:
    image: postgres:16-alpine
    container_name: onedev-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: onedev
      POSTGRES_USER: onedev
      POSTGRES_PASSWORD: ${ONEDEV_DB_PASSWORD}
    volumes:
      - onedev_db_data:/var/lib/postgresql/data
    networks:
      - zone1
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U onedev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Zot - OCI-native container registry
  zot:
    image: ghcr.io/project-zot/zot-linux-amd64:latest
    container_name: zot-registry
    restart: unless-stopped
    ports:
      - "${ZOT_PORT:-5000}:5000"
    volumes:
      - zot_data:/var/lib/registry
      - ./zot-config.json:/etc/zot/config.json:ro
    command: serve /etc/zot/config.json
    networks:
      - zone1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/v2/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Zot UI (optional)
  zot-ui:
    image: ghcr.io/project-zot/zot-ui:latest
    container_name: zot-ui
    restart: unless-stopped
    ports:
      - "${ZOT_UI_PORT:-5001}:5001"
    environment:
      ZOT_API_URL: http://zot:5000
    depends_on:
      - zot
    networks:
      - zone1

volumes:
  onedev_data:
    driver: local
  onedev_db_data:
    driver: local
  zot_data:
    driver: local

networks:
  zone1:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
