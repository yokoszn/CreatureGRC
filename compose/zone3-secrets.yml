# Zone 3: Secrets Management
# Infisical (secrets management) + Vaultwarden (password manager)
# Can be deployed standalone or as part of megamonolith

version: '3.8'

services:
  # Infisical - Secrets Management Platform
  infisical:
    image: infisical/infisical:latest
    container_name: infisical
    restart: unless-stopped
    ports:
      - "${INFISICAL_PORT:-8080}:8080"
    environment:
      # Database
      DB_CONNECTION_URI: postgres://infisical:${INFISICAL_DB_PASSWORD}@infisical-db:5432/infisical

      # Redis
      REDIS_URL: redis://infisical-redis:6379

      # Encryption
      ENCRYPTION_KEY: ${INFISICAL_ENCRYPTION_KEY}
      AUTH_SECRET: ${INFISICAL_AUTH_SECRET}

      # Site URL
      SITE_URL: ${INFISICAL_SITE_URL:-http://localhost:8080}

      # Email (optional)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_SECURE: ${SMTP_SECURE:-true}
      SMTP_USERNAME: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_ADDRESS: ${SMTP_FROM:-infisical@example.com}
      SMTP_FROM_NAME: "Infisical"

      # Optional integrations
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED:-false}
    depends_on:
      infisical-db:
        condition: service_healthy
      infisical-redis:
        condition: service_started
    volumes:
      - infisical_data:/app/data
    networks:
      - zone3
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  infisical-db:
    image: postgres:16-alpine
    container_name: infisical-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: infisical
      POSTGRES_USER: infisical
      POSTGRES_PASSWORD: ${INFISICAL_DB_PASSWORD}
    volumes:
      - infisical_db_data:/var/lib/postgresql/data
    networks:
      - zone3
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U infisical"]
      interval: 10s
      timeout: 5s
      retries: 5

  infisical-redis:
    image: redis:7-alpine
    container_name: infisical-redis
    restart: unless-stopped
    command: redis-server --requirepass ${INFISICAL_REDIS_PASSWORD}
    volumes:
      - infisical_redis_data:/data
    networks:
      - zone3

  # Vaultwarden - Bitwarden-compatible password manager
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    ports:
      - "${VAULTWARDEN_HTTP_PORT:-8081}:80"
      - "${VAULTWARDEN_WEBSOCKET_PORT:-3012}:3012"
    environment:
      # Database
      DATABASE_URL: postgresql://vaultwarden:${VAULTWARDEN_DB_PASSWORD}@vaultwarden-db:5432/vaultwarden

      # Domain
      DOMAIN: ${VAULTWARDEN_DOMAIN:-https://vault.example.com}

      # Admin
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN}

      # Email (optional)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_FROM: ${SMTP_FROM:-vaultwarden@example.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_SECURITY: ${SMTP_SECURITY:-starttls}
      SMTP_USERNAME: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}

      # Features
      SIGNUPS_ALLOWED: ${VAULTWARDEN_SIGNUPS_ALLOWED:-false}
      INVITATIONS_ALLOWED: ${VAULTWARDEN_INVITATIONS_ALLOWED:-true}
      SHOW_PASSWORD_HINT: false

      # Security
      WEBSOCKET_ENABLED: true
      YUBICO_CLIENT_ID: ${VAULTWARDEN_YUBICO_CLIENT_ID}
      YUBICO_SECRET_KEY: ${VAULTWARDEN_YUBICO_SECRET_KEY}

      # Logging
      LOG_LEVEL: info
    depends_on:
      vaultwarden-db:
        condition: service_healthy
    volumes:
      - vaultwarden_data:/data
    networks:
      - zone3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/alive"]
      interval: 30s
      timeout: 10s
      retries: 3

  vaultwarden-db:
    image: postgres:16-alpine
    container_name: vaultwarden-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: vaultwarden
      POSTGRES_USER: vaultwarden
      POSTGRES_PASSWORD: ${VAULTWARDEN_DB_PASSWORD}
    volumes:
      - vaultwarden_db_data:/var/lib/postgresql/data
    networks:
      - zone3
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vaultwarden"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  infisical_data:
    driver: local
  infisical_db_data:
    driver: local
  infisical_redis_data:
    driver: local
  vaultwarden_data:
    driver: local
  vaultwarden_db_data:
    driver: local

networks:
  zone3:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16
